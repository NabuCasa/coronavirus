name: Cache

on:
  push:
  schedule:
    - cron: "*/10 * * * *"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out files from GitHub
        uses: actions/checkout@v2
      - name: Download latest information
        run: >-
          curl -v -s --retry 5 -H "Accept: application/json" https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/2/query\?where\=1%3D1\&objectIds\=\&time\=\&geometry\=\&geometryType\=esriGeometryEnvelope\&inSR\=\&spatialRel\=esriSpatialRelIntersects\&resultType\=none\&distance\=0.0\&units\=esriSRUnit_Meter\&returnGeodetic\=false\&outFields\=\*\&returnGeometry\=false\&featureEncoding\=esriDefault\&multipatchOption\=xyFootprint\&maxAllowableOffset\=\&geometryPrecision\=\&outSR\=\&datumTransformation\=\&applyVCSProjection\=false\&returnIdsOnly\=false\&returnUniqueIdsOnly\=false\&returnCountOnly\=false\&returnExtentOnly\=false\&returnQueryGeometry\=false\&returnDistinctValues\=false\&cacheHint\=false\&orderByFields\=\&groupByFieldsForStatistics\=\&outStatistics\=\&having\=\&resultOffset\=\&resultRecordCount\=\&returnZ\=false\&returnM\=false\&returnExceededLimitFeatures\=true\&quantizationParameters\=\&sqlFormat\=none\&f\=pjson\&token\= > public/corona.json
      - name: Verify it is valid
        run: jq -e ".features" public/corona.json
      - name: Deploy to Netlify
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=public --prod
